Step 1: Prepare Your Orange Pi 5
First, let's check if your NPU is properly detected:
bash# SSH into your Orange Pi 5 and run these commands:

# Check if NPU device nodes exist
ls -la /dev/dri/
# You should see renderD128, renderD129, etc.

# Check NPU kernel module
lsmod | grep rknpu
# Should show rknpu module loaded

# Check NPU firmware version
cat /sys/kernel/debug/rknpu/version 2>/dev/null || echo "NPU debug info not available"

# Check system info
uname -a
cat /proc/cpuinfo | grep -i rk3588
Step 2: Install Dependencies
bash# Update system
sudo apt update && sudo apt upgrade -y

# Install build tools
sudo apt install -y build-essential cmake git python3-dev python3-pip

# Install RKNN runtime libraries
# Download the runtime package
wget https://github.com/rockchip-linux/rknpu2/releases/download/v1.6.0/rknpu2-rk3588-linux-v1.6.0.tar.gz

# Extract and install
tar -xzf rknpu2-rk3588-linux-v1.6.0.tar.gz
cd rknpu2-rk3588-linux-v1.6.0

# Copy libraries (adjust path based on your architecture)
sudo cp runtime/RK3588/Linux/librknn_api/lib64/* /usr/lib/aarch64-linux-gnu/ 2>/dev/null || \
sudo cp runtime/RK3588/Linux/librknn_api/lib/* /usr/lib/aarch64-linux-gnu/

# Copy headers
sudo mkdir -p /usr/include/rknn
sudo cp runtime/RK3588/Linux/librknn_api/include/* /usr/include/rknn/

# Update library cache
sudo ldconfig

# Install Python RKNN library
pip3 install rknnlite
Step 3: Create and Test the Server
Let me create a simplified test version first:Simple RK3588 NPU Test ServerCode #!/usr/bin/env python3
# simple_rk3588_test.py - Test server for Orange Pi 5
import socket
import threading
import time
import numpy as np
import sys
import os

# Try to import RKNN
try:
    from rknnlite.api import RKNNLite
    RKNN_AVAILABLE = TrueStep 4: Test the Server
Save this code as simple_rk3588_test.py on your Orange Pi 5 and run:
bash# First, test without a model (to check basic setup)
python3 simple_rk3588_test.py

# This will run on port 8080 and show you if NPU hardware is detected
Step 5: Test Basic Connectivity
From your x86 PC, test the connection:
bash# Simple connectivity test
telnet your_orange_pi_ip 8080

# Or use nc (netcat)
echo "test" | nc your_orange_pi_ip 8080
Step 6: Get a Test Model
If you don't have an RKNN model yet, let's create one:Create Test RKNN ModelCode #!/usr/bin/env python3
# create_test_model.py - Run this on a PC with RKNN-Toolkit2
import numpy as np
import onnx
from onnx import helper, TensorProto
import sys

def create_simple_model():
    """Create a simple ONNX model for testing"""
    print(Step 7: What to Do Next

Run the test server on Orange Pi 5:
bashpython3 simple_rk3588_test.py

Check the output - it will tell you:

If NPU hardware is detected
If RKNN libraries are working
What IP/port it's listening on


Test from your x86 PC using the client code I provided earlier:
bashpython3 hailo_client.py YOUR_ORANGE_PI_IP test_image.jpg
